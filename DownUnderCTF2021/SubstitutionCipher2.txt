from string import ascii_lowercase, digits
CHARSET = "DUCTF{}_!?'" + ascii_lowercase + digits
n = len(CHARSET)
print(n)


def encrypt(msg, f):
    ct = ''
    for c in msg:
        ct += CHARSET[f.substitute(CHARSET.index(c))]
    return ct


P.< x > = PolynomialRing(GF(n))
F = GF(n)
s = "Ujyw5dnFofaou0au3nx3Cn84"
for c in s:
    print(CHARSET.index(c))
a, b, c, d, e, f = 1, 2, 3, 4, 1, 1
M = Matrix(F, [[a**6, a**5, a**4, a**3, a**2, a], [b**6, b**5, b**4, b**3, b**2, b], [c**6, c**5, c**4, c**3, c**2, c],
           [d**6, d**5, d**4, d**3, d**2, d], [e**6, e**5, e**4, e**3, e**2, e], [f**6, f**5, f**4, f**3, f**2, f]])
cnt = 0
st = set()
for i1 in range(0, n):
    for i2 in range(0, n):
        a = 1
        b = 2
        c = 3
        d = 4
        e = i1
        f = i2
        M = Matrix(F, [[a**6, a**5, a**4, a**3, a**2, a], [b**6, b**5, b**4, b**3, b**2, b], [c**6, c**5, c**4, c**3, c**2, c], [d**6, d**5,
                   d**4, d**3, d**2, d], [e**6, e**5, e**4, e**3, e**2, e], [f**6, f**5, f**4, f**3, f**2, f]])
        # print(M)
        v = vector(F, [19, 34, 32, 41, 13, 23])
        try:
            t = M.solve_right(v)
            cnt += 1
            f = x ^ 6*t[0]+x ^ 5*t[1]+x ^ 4*t[2]+x ^ 3*t[3]+x ^ 2*t[4]+x*t[5]+1
            #print(f)
            res = ""
            Count=0
            for c in s:
                index = CHARSET.index(c)
                f = x ^ 6*t[0]+x ^ 5*t[1]+x ^ 4*t[2] + x ^ 3*t[3]+x ^ 2*t[4]+x*t[5]+1-index
                tmp = f.roots()
                if(len(tmp)== 0):
                    break
                Count+=1
            if(Count==len(s)):
                print(t)
            # print(t)
            st.add(str(t))
        except:
            pass
            # print("cdb")

print(cnt)
cnt=0
f = 41*x ^ 6 + 15*x ^ 5+40*x ^ 4+9*x ^ 3 + 28*x ^ 2+27*x+1
for c in s:
    index = CHARSET.index(c)
    f = 41*x ^ 6 + 15*x ^ 5+40*x ^ 4+9*x ^ 3 + 28*x ^ 2+27*x+1-index
    tmp = f.roots()
    print(tmp)
ans="DUCTF{"
l=[17,25,37,14,7,37,22,10,7,22,41,17,28,41,24,17,40,6]
for i in l:
    ans+=CHARSET[i]
print(ans)
