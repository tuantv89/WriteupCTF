from Crypto.PublicKey import RSA
from Crypto.Util.number import inverse, long_to_bytes, bytes_to_long
from base64 import *
key = open("E:\ctf\killer_queen_ctf\cloudsourcing\key.pub", "r").read().strip()
print(key)
k = RSA.import_key(key)
e = k.e
n = k.n
p = 147763690849150867668225909469550433915451732812463057700984569348470253956194816406951574728889706783894785686020012100588052689320692584241194441102306664861087263417689874062764278453049583722940577602045732615047554285117930803297120866855129431558042684619199933145634615860792724440681809733506643143827
q = 175323579375439355271067762791797570532327618905238153569106939865810515426195444129569514172323381418275130113304584918382539461249836590401476762173083711488347557377316041604414956494612922763528717954203932654977534635925919801687408066965455169210358420975001566564559944039223342904162696905475355996899
phi = (p-1)*(q-1)
d = inverse(e, phi)
enc = open("E:\ctf\killer_queen_ctf\cloudsourcing\mystery.txt","r").read().strip()
enc = b64decode(enc)
print(long_to_bytes(pow(bytes_to_long(enc),d,n)))
#kqctf{y0uv3_6r4du473d_fr0m_r54_m1ddl3_5ch00l_abe7e79e244a9686efc0}
